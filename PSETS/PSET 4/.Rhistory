mse
mse_output <- transpose(mse)
mse_output
mse_output$h <- seq(.1, 1, .1)
mse_output <- c("MSE", "h")
mse_output
mse_output <- transpose(mse)
mse_output$h <- seq(.1, 1, .1)
colnames(mse_output) <- c("MSE", "h")
mse_output
bias_h
means_h_tbl
m_tbl
means_h_tbl
(m_tbl - means_h_tbl)^2
vardif_h
var_h
mse <- bias_h^2 + var_h
mse_output <- transpose(mse)
mse_output$h <- seq(.1, 1, .1)
colnames(mse_output) <- c("MSE", "h")
mse_output
mse_output <- transpose(mse)
colnames(mse_output) <- c("MSE")
mse_output$bias <- bias_h
mse_output$var <- var_h
mse_output$h <- seq(.1, 1, .1)
mse_output
bias
transpose(bias_h)
mse_output <- transpose(mse)
colnames(mse_output) <- c("MSE")
mse_output$bias <- transpose(bias_h)
mse_output$var <- transpose(var_h)
mse_output$h <- seq(.1, 1, .1)
mse_output
m_tbl
m_tbl
means_h
bias_h
means_h_tbl
vardif_h
mse_output
means_h
m_tbl
means_h
mse_output
mse_output$bias <- transpose(bias_h)^2
mse_output
library(data.table)
library(ggplot2)
library(mvmeta)
########################################################################
########################## Generating Dataset ##########################
########################################################################
set.seed(1)
s <- 1000
n <- 500
drawSamples <- function(n, i) {
X <- runif(n, -2, 2)
V <- rnorm(n, 0, 81)
Y <- sin(X) + 2 * exp(-16 * X^2) + V
dt <- data.table(cbind(Y, X))
colnames(dt) <- c(paste("Y", i, sep = "_"), paste("X", i, sep = "_"))
dt
}
W_tbl <- do.call(cbind, lapply(1:1000, function (x) drawSamples(500, x)))
calculateM <- function(h, dt) {
dt$int <- dt[,2] <= h & dt[,2] >= -h
dt[int == TRUE, sum(.SD),.SDcols = c(1)]/sum(dt$int)
}
calculateMh <- function(i) {
dt <- data.table(lapply(1:1000, function (x)
calculateM(i, W_tbl[,.SD,.SDcols = c(2*x-1, 2*x)])))
colnames(dt) <- paste("M", i, sep = "_")
dt
}
m_tbl <- do.call(cbind, lapply(seq(.1, 1, .1), function (i) calculateMh(i)))
m_tbl <- m_tbl[, lapply(.SD, function (x) unlist(x)),.SDcols = c(colnames(m_tbl))]
expected <- sin(0) + 2 * exp(-16 * 0^2)
means_h <- m_tbl[,lapply(.SD, mean), .SDcols = colnames(m_tbl)]
bias_h <- means_h - expected
means_h_tbl <- means_h[rep(1, 1000)]
vardif_h <- (m_tbl - means_h_tbl)^2
var_h <- vardif_h[,lapply(.SD, mean), .SDcols = colnames(m_tbl)]
mse <- bias_h^2 + var_h
mse_output <- transpose(mse)
colnames(mse_output) <- c("MSE")
mse_output$bias <- transpose(bias_h)
mse_output$var <- transpose(var_h)
mse_output$h <- seq(.1, 1, .1)
mse_output$bias <- mse_output$bias^2
mse_output
sessionInfo()
calculateLeapYear <- function(year) {
if (year % 4 == 0) & (year % 100 != 0) {
"TRUE"
}
"FALSE"
}
calculateLeapYear <- function(year) {
if (year % 400 == 0) | (year % 4 == 0) & (year % 100 != 0) {
"TRUE"
}
"FALSE"
}
calculateLeapYear <- function(year) {
if (year % 400 == 0) || (year % 4 == 0) & (year % 100 != 0) {
"TRUE"
}
"FALSE"
}
calculateLeapYear <- function(year) {
if (year % 400 == 0) || (year % 4 == 0) && (year % 100 != 0) {
"TRUE"
}
"FALSE"
}
calculateLeapYear <- function(year) {
if (year % 400 == 0) || (year % 4 == 0) && (year % 100 != 0) {
"TRUE"
}
"FALSE"
}
400 % 33
400 %% 33
calculateLeapYear <- function(year) {
if (year %% 400 == 0) | (year %% 4 == 0) & (year %% 100 != 0) {
"TRUE"
}
"FALSE"
}
calculateLeapYear <- function(year) {
if (year %% 4 == 0) & (year %% 100 != 0) {
"TRUE"
}
"FALSE"
}
calculateLeapYear <- function(year) {
if (year % 4 == 0) & (year % 100 != 0) {
"TRUE"
}
"FALSE"
}
data
data <- fread('demand_data.csv')
data
library(data.table)
setwd("~/Google Drive/Academic Work/Sophomore Year/Spring Quarter/Metrics Data Science/ECMA31320/PSETS/PSET 4/")
data <- fread('demand_data.csv')
data
data_temp <- data
data[,c("x1_prod1", "x2_prod1", "x3_prod1")]
data[,c("x1_prod1", "x2_prod1", "x3_prod1")] * c(1, 2, 3)
data[,c("x1_prod1", "x2_prod1", "x3_prod1")] %*% c(1, 2, 3)
transpose(data[,c("x1_prod1", "x2_prod1", "x3_prod1")]) %*% c(1, 2, 3)
transpose(data[,c("x1_prod1", "x2_prod1", "x3_prod1")])
as.matrix(data[,c("x1_prod1", "x2_prod1", "x3_prod1")]) %*% c(1, 2, 3)
data_temp <- data
data_temp$x1_beta <- as.matrix(data[,c("x1_prod1", "x2_prod1", "x3_prod1")]) %*% c(1, 2, 3)
data_temp
7.459917 + 2 + 7.267866*3
data_temp <- data
prod <- c("x1_prod", "x2_prod", "x3_prod")
data_temp$x0_beta <- as.matrix(data[,paste(prod, 0, sep = "")]) %*% beta
data_temp$x1_beta <- as.matrix(data[,paste(prod, 1, sep = "")]) %*% beta
beta <- c(1, 2, 3)
data_temp$x0_beta <- as.matrix(data[,paste(prod, 0, sep = "")]) %*% beta
data_temp$x1_beta <- as.matrix(data[,paste(prod, 1, sep = "")]) %*% beta
data_temp$x2_beta <- as.matrix(data[,paste(prod, 2, sep = "")]) %*% beta
data_temp$x3_beta <- as.matrix(data[,paste(prod, 3, sep = "")]) %*% beta
data[,paste(prod, 0, sep = "")]
data[,..paste(prod, 0, sep = "")]
as.matrix(data[,.SD, .SDcols = paste(prod, 0, sep = "")]) %*% beta
as.matrix(data[,.SD, .SDcols = paste(prod, 0, sep = "")])
data_temp
paste(prod, 0, sep = "")
data_temp <- data
prod <- c("x1_prod", "x2_prod", "x3_prod")
data_temp$x0_beta <- as.matrix(data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]) %*% beta
data_temp$x1_beta <- as.matrix(data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]) %*% beta
data_temp$x2_beta <- as.matrix(data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]) %*% beta
data_temp$x3_beta <- as.matrix(data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]) %*% beta
data_temp
data_temp[, .SD, .SDcols = paste(prod, choice, sep = "")]
data_temp
paste(prod, choice, sep = "")
data_temp[, .SD, .SDcols = paste(prod, data_temp$choice, sep = "")]
data_temp[, .SD, .SDcols = paste(prod, get(choice), sep = "")]
data_temp[, .SD, .SDcols = paste(prod, get(data_temp$choice), sep = "")]
get(data_temp$choice)
paste(prod, data_temp$choice)
rep(prod, 5000)
data_temp[, .SD, .SDcols = paste(prod, choice, sep = "")]
data <- fread('demand_data.csv')
returnScore <- function(beta) {
for (i in 1:dim(data)[1}]) {
}
for (i in 1:dim(data)[1}]) {
print(i)
}
for (i in 1:dim(data)[1]) {
print(i)
}
choice <- daat[i, "choice"]
choice <- data[i, "choice"]
choice
i
data
paste("x1_prod", "x2_prod", "x3_prod", choice, sep = "")
paste(c("x1_prod", "x2_prod", "x3_prod"), choice, sep = "")
data[i, .SD, .SDcols = paste(c("x1_prod", "x2_prod", "x3_prod"), choice, sep = "")]
for (i in 0:3) {
print(j)
}
for (j in 0:3) {
print(j)
}
data_temp <- data
prod <- c("x1_prod", "x2_prod", "x3_prod")
data_temp$x0_beta <- as.matrix(data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]) %*% beta
data_temp$x1_beta <- as.matrix(data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]) %*% beta
data_temp$x2_beta <- as.matrix(data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]) %*% beta
data_temp$x3_beta <- as.matrix(data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]) %*% beta
i
i <- 1
x_j <- data_temp[i, .SD, .SDcols = paste("x",choice,"_beta",sep = "")]
x_j
x_j <- data_temp[i,.SD, .SDcols = paste(prod, choice, sep = "")]
x_j
data_temp[i, x0_beta + x1_beta + x2_beta + x3_beta]
data_temp <- data
prod <- c("x1_prod", "x2_prod", "x3_prod")
data_temp$x0_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]) %*% beta)
data_temp$x1_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]) %*% beta)
data_temp$x2_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]) %*% beta)
data_temp$x3_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]) %*% beta)
x_j <- data_temp[i,.SD, .SDcols = paste(prod, choice, sep = "")]
data_temp[i, x0_beta]
data_temp[i, c(x0_beta, x1_beta, x2_beta, x3_beta)]
data_temp[i, c(x0_beta, x1_beta, x2_beta, x3_beta)]
c(x0, x1, x2, x3) * data_temp[i, c(x0_beta, x1_beta, x2_beta, x3_beta)]
x0 <- data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]
x1 <- data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]
x2 <- data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]
x3 <- data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]
c(x0, x1, x2, x3) * data_temp[i, c(x0_beta, x1_beta, x2_beta, x3_beta)]
c(x0, x1, x2, x3) *
c(x0, x1, x2, x3)
x0
x0[1]
(x0*data_temp[i, x0_beta] + x1*data_temp[i, x1_beta] + x2*data_temp[i, x2_beta] + x3*data_temp[i, x3_beta])
(x0[i]*data_temp[i, x0_beta] + x1[i]*data_temp[i, x1_beta] + x2[i]*data_temp[i, x2_beta] + x3[i]*data_temp[i, x3_beta])
(x0[i]*data_temp[i, x0_beta] + x1[i]*data_temp[i, x1_beta] + x2[i]*data_temp[i, x2_beta] + x3[i]*data_temp[i, x3_beta]) *
1/data_temp[i, x0_beta + x1_beta + x2_beta + x3_beta]
x_j
x_j - (x0[i]*data_temp[i, x0_beta] + x1[i]*data_temp[i, x1_beta] + x2[i]*data_temp[i, x2_beta] + x3[i]*data_temp[i, x3_beta]) *
1/data_temp[i, x0_beta + x1_beta + x2_beta + x3_beta]
foreach (i = 1:5000, .combine = 'sum') %do% {
x_j <- data_temp[i,.SD, .SDcols = paste(prod, choice, sep = "")]
x_j - (x0[i]*data_temp[i, x0_beta] + x1[i]*data_temp[i, x1_beta] + x2[i]*data_temp[i, x2_beta] + x3[i]*data_temp[i, x3_beta]) *
1/data_temp[i, x0_beta + x1_beta + x2_beta + x3_beta]
}
library(foreach)
foreach (i = 1:5000, .combine = 'sum') %do% {
x_j <- data_temp[i,.SD, .SDcols = paste(prod, choice, sep = "")]
x_j - (x0[i]*data_temp[i, x0_beta] + x1[i]*data_temp[i, x1_beta] + x2[i]*data_temp[i, x2_beta] + x3[i]*data_temp[i, x3_beta]) *
1/data_temp[i, x0_beta + x1_beta + x2_beta + x3_beta]
}
foreach (i = 1:5000, .combine = 'c') %do% {
x_j <- data_temp[i,.SD, .SDcols = paste(prod, choice, sep = "")]
x_j - (x0[i]*data_temp[i, x0_beta] + x1[i]*data_temp[i, x1_beta] + x2[i]*data_temp[i, x2_beta] + x3[i]*data_temp[i, x3_beta]) *
1/data_temp[i, x0_beta + x1_beta + x2_beta + x3_beta]
}
calculateScore <- function(choice, data_temp) {
x0 <- data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]
x1 <- data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]
x2 <- data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]
x3 <- data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]
finalsum <- c(0, 0, 0)
foreach (i = 1:5000, .combine = 'c') %do% {
x_j <- data_temp[i,.SD, .SDcols = paste(prod, choice, sep = "")]
finalsum = finalsum + x_j -
(x0[i]*data_temp[i, x0_beta] + x1[i]*data_temp[i, x1_beta] + x2[i]*data_temp[i, x2_beta] + x3[i]*data_temp[i, x3_beta]) *
1/data_temp[i, x0_beta + x1_beta + x2_beta + x3_beta]
}
}
returnScore <- function(beta) {
data_temp <- data
prod <- c("x1_prod", "x2_prod", "x3_prod")
data_temp$x0_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]) %*% beta)
data_temp$x1_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]) %*% beta)
data_temp$x2_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]) %*% beta)
data_temp$x3_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]) %*% beta)
calculateScore(choice, data_temp)
}
calculateScore <- function(choice, data_temp) {
x0 <- data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]
x1 <- data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]
x2 <- data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]
x3 <- data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]
for (i in 1:5000) {
x_j <- data_temp[i,.SD, .SDcols = paste(prod, choice, sep = "")]
finalsum = finalsum + x_j -
(x0[i]*data_temp[i, x0_beta] + x1[i]*data_temp[i, x1_beta] + x2[i]*data_temp[i, x2_beta] + x3[i]*data_temp[i, x3_beta]) *
1/data_temp[i, x0_beta + x1_beta + x2_beta + x3_beta]
}
finalsum
}
returnScore <- function(beta) {
data_temp <- data
prod <- c("x1_prod", "x2_prod", "x3_prod")
data_temp$x0_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]) %*% beta)
data_temp$x1_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]) %*% beta)
data_temp$x2_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]) %*% beta)
data_temp$x3_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]) %*% beta)
calculateScore(choice, data_temp)
}
returnScore(c(1,2,3))
x3 <- data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]
returnScore <- function(beta) {
data_temp <- data
prod <- c("x1_prod", "x2_prod", "x3_prod")
data_temp$x0_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]) %*% beta)
data_temp$x1_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]) %*% beta)
data_temp$x2_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]) %*% beta)
data_temp$x3_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]) %*% beta)
calculateScore(choice, data_temp)
}
calculateScore <- function(choice, data_temp) {
x0 <- data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]
x1 <- data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]
x2 <- data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]
x3 <- data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]
finalsum <- 0
for (i in 1:5000) {
x_j <- data_temp[i,.SD, .SDcols = paste(prod, choice, sep = "")]
finalsum <- finalsum + x_j -
(x0[i]*data_temp[i, x0_beta] + x1[i]*data_temp[i, x1_beta] + x2[i]*data_temp[i, x2_beta] + x3[i]*data_temp[i, x3_beta]) *
1/data_temp[i, x0_beta + x1_beta + x2_beta + x3_beta]
}
finalsum
}
returnScore(c(1,2,3))
data_temp
returnScore <- function(beta) {
data_temp <- data
prod <- c("x1_prod", "x2_prod", "x3_prod")
data_temp$x0_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]) %*% beta)
data_temp$x1_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]) %*% beta)
data_temp$x2_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]) %*% beta)
data_temp$x3_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]) %*% beta)
x0 <- data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]
x1 <- data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]
x2 <- data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]
x3 <- data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]
finalsum <- 0
for (i in 1:5000) {
if (i %% 1000 == 0) {
print(i)
}
choice_prod <- data_temp$choice[i]
x_j <- data_temp[i,.SD, .SDcols = paste(prod, choice_prod, sep = "")]
finalsum <- finalsum + x_j -
(x0[i]*data_temp[i, x0_beta] + x1[i]*data_temp[i, x1_beta] + x2[i]*data_temp[i, x2_beta] + x3[i]*data_temp[i, x3_beta]) *
1/data_temp[i, x0_beta + x1_beta + x2_beta + x3_beta]
}
finalsum
}
paste(prod, choice, sep = "")
choice
data.table(prod)
transpose(data.table(prod))
?rbindlist
rbindlist(lapply(1:5000, function (x) prod))
lapply(1:5000, function (x) prod)
data.table(lapply(1:5000, function (x) prod))
rbindlist(lapply(1:5000, function (x) prod))
(lapply(1:5000, function (x) prod)
lapply(1:5000, function (x) prod)
unlist(lapply(1:5000, function (x) prod))
lapply(1:5000, function (x) prod)
petesFun2 <-function(myDat) {
prod <- c("x1_prod", "x2_prod", "x3_prod")
return(myDat[, cbind(.SD, x_j=.SD[[paste(prod, .BY$choice, sep = "")]]),
by=choice])
}
petesFun2(data)
petesFun2(data_temp)
paste(prod, .BY$choice, sep = "")
.BY$choice
data_temp
data_temp <- data
prod <- c("x1_prod", "x2_prod", "x3_prod")
data_temp$x0_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]) %*% beta)
data_temp$x1_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]) %*% beta)
data_temp$x2_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]) %*% beta)
data_temp$x3_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]) %*% beta)
x0 <- data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]
x1 <- data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]
x2 <- data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]
x3 <- data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]
#select different column per row
petesFun2 <-function(myDat) {
prod <- c("x1_prod", "x2_prod", "x3_prod")
return(myDat[, cbind(.SD, x_j=.SD[[paste(prod, .BY$choice, sep = "")]]),
by=choice])
}
petesFun2(data_temp)
#select different column per row
petesFun2 <-function(myDat) {
prod <- c("x1_prod", "x2_prod", "x3_prod")
return(myDat[, cbind(.SD, x_j=.SD[paste(prod, .BY$choice, sep = "")]),
by=choice])
}
petesFun2(data_temp)
data_temp[, data.table(.SD, x_j=.SD[[paste0(.SD$choice, "_data")]]),
by=1:nrow(a)]
data_temp[, data.table(.SD, x_j=.SD[[paste0(.SD$choice, "_data")]]),
by=1:nrow(data_temp)]
data <- fread('demand_data.csv')
data_temp <- data
data
data_temp <- data
prod <- c("x1_prod", "x2_prod", "x3_prod")
data_temp$x0_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]) %*% beta)
data_temp$x1_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]) %*% beta)
data_temp$x2_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]) %*% beta)
data_temp$x3_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]) %*% beta)
x0 <- data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]
x1 <- data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]
x2 <- data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]
x3 <- data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]
data_temp
data_temp[, data.table(.SD, x_j=.SD[[paste0(.SD$choice, "_data")]]),
by=1:nrow(data_temp)]
data_temp[, data.table(.SD, c(x_j_1, x_j_2, x_j_3)=.SD[[paste0(.SD$choice, "_data")]]),
by=1:nrow(data_temp)]
data_temp[, data.table(.SD, x_j=.SD[[paste0(.SD$choice, "_data")]]),
by=1:nrow(data_temp)]
data_temp
data_temp$choice
table(data_temp$choice)
nrow(data_temp[choice == 0])
zero_count <- nrow(data_temp[choice == 0])
one_count <- nrow(data_temp[choice == 1])
two_count <- nrow(data_temp[choice == 2])
three_count <- nrow(data_temp[choice == 3])
x0
data_temp$x0_beta
x0*data_temp$x0_beta
(x0*data_temp$x0_beta + x1*data_temp$x1_beta +
x2*data_temp$x2_beta + x3*data_temp$x3_beta)
(x0*data_temp$x0_beta + x1*data_temp$x1_beta +
x2*data_temp$x2_beta + x3*data_temp$x3_beta) *
1 / data_temp[,x0_beta + x1_beta + x2_beta + x3_beta]
x0
count0*x0 + count1*x1 + count2*x2 + count3*x3
count0 <- nrow(data_temp[choice == 0])
count1 <- nrow(data_temp[choice == 1])
count2 <- nrow(data_temp[choice == 2])
count3 <- nrow(data_temp[choice == 3])
count0*x0 + count1*x1 + count2*x2 + count3*x3
x0
x0
count0*x0 + count1*x1 + count2*x2 + count3*x3
(x0*data_temp$x0_beta + x1*data_temp$x1_beta +
x2*data_temp$x2_beta + x3*data_temp$x3_beta) *
1 / data_temp[,x0_beta + x1_beta + x2_beta + x3_beta]
count0*x0 + count1*x1 + count2*x2 + count3*x3
count0*x0 + count1*x1 + count2*x2 + count3*x3
[count0*x0 + count1*x1 + count2*x2 + count3*x3][1]
res1 <- count0*x0 + count1*x1 + count2*x2 + count3*x3
res1[1]
res2 <- (x0*data_temp$x0_beta + x1*data_temp$x1_beta +
x2*data_temp$x2_beta + x3*data_temp$x3_beta) *
1 / data_temp[,x0_beta + x1_beta + x2_beta + x3_beta]
res2
colSums(res2)
res1[1] - colSums(res2)
returnScore <- function(beta) {
data_temp <- data
prod <- c("x1_prod", "x2_prod", "x3_prod")
data_temp$x0_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]) %*% beta)
data_temp$x1_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]) %*% beta)
data_temp$x2_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]) %*% beta)
data_temp$x3_beta <- exp(as.matrix(data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]) %*% beta)
x0 <- data_temp[,.SD, .SDcols = paste(prod, 0, sep = "")]
x1 <- data_temp[,.SD, .SDcols = paste(prod, 1, sep = "")]
x2 <- data_temp[,.SD, .SDcols = paste(prod, 2, sep = "")]
x3 <- data_temp[,.SD, .SDcols = paste(prod, 3, sep = "")]
count0 <- nrow(data_temp[choice == 0])
count1 <- nrow(data_temp[choice == 1])
count2 <- nrow(data_temp[choice == 2])
count3 <- nrow(data_temp[choice == 3])
res1 <- count0*x0 + count1*x1 + count2*x2 + count3*x3
res2 <- (x0*data_temp$x0_beta + x1*data_temp$x1_beta +
x2*data_temp$x2_beta + x3*data_temp$x3_beta) *
1 / data_temp[,x0_beta + x1_beta + x2_beta + x3_beta]
res1[1] - colSums(res2)
}
res1
count0
x0
count1
x1
count2
x2
x0
x1
x0
data_temp
